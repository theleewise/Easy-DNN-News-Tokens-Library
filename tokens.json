{
  "tokensList":[
    {
      "token":"[EasyDNNnews:Title]",
      "description":"Article title.",
      "example":"This is article title",
      "files":["List_","Details_"]
    },
    {
      "token":"[EasyDNNnews:Title:Limit:20]",
      "description":"Article title limited to 20 characters",
      "example":"This is article ...",
      "files":["List_"]
    },
    {
      "token":"[EasyDNNnews:SubTitle]",
      "description":"Article subtitle.",
      "example":"This is article subtitle",
      "files":["List_","Details_"]
    },
    {
      "token":"[EasyDNNnews:SubTitle:Limit:20]",
      "description":"Article subtitle limited to 20 characters length. **",
      "example":"This is article ...",
      "files":["List_"]
    },
    {
      "token":"[EasyDNNnews:IfExists:SubTitle][EasyDNNnews:EndIf:SubTitle]",
      "description":"Checks if article subtitle exists and then displays content between the tokens. If the subtitle does not exist the content between tokens is deleted.",
      "files":["List_","Details_"]
    },
    {
      "token":"[EasyDNNnews:IfNotExists:SubTitle][EasyDNNnews:EndIf:SubTitle]",
      "description":"Checks if article subtitle exists and if it does not then displays content between the tokens. If the subtitle does not exist the content between tokens is deleted.",
      "files":["List_","Details_"]
    },

    // Summary
    {
      "token":"[EasyDNNnews:Summary]",
      "description":"Article summary.",
      "example":"This is summary This is summary This is summary",
      "files":["List_","Details_"]
    },
    {
      "token":"[EasyDNNnews:Summary:Limit:30]",
      "description":"Article subtitle limited to 30 characters length.",
      "example":"This is summary This is ...",
      "files":["List_"]
    },
    {
      "token":"[EasyDNNnews:IfExists:Summary][EasyDNNnews:EndIf:Summary]",
      "description":"Checks if article summary exists andthen displays content between the tokens. If the summary does not exist the content between tokens is deleted.",
      "files":["List_","Details_"]
    },
    {
      "token":"[EasyDNNnews:IfNotExists:Summary][EasyDNNnews:EndIf:Summary]",
      "description":"Checks if article summary exists. If does not exists then displays content between the tokens. If the summary exists the content between tokens is deleted.",
      "files":["List_","Details_"]
    },

    //    Main article text

      //   [EasyDNNnews:Article]
      //  Description:
      // Main article content.
      // "example":"This is article content This is article",
      // content This is article content
      //   o List_
      // o Details_
      //  [EasyDNNnews:Article:Limit:300]
      //  Description:
      // Main article limited to 300 characters
      // length.
      // "example":"This is article content This is article",
      // content ...
      //   List_
      //    Read more
      //   [EasyDNNnews:ReadMore]
      //  Description:
      // Link to article details.
      // How to use it template:
      // <a href="[EasyDNNnews:ReadMore]"></a>
      //   List_
      //  [EasyDNNnews:ReadMore:Title]
      //  Description:
      // By default it shows “Read more” or it
      // canbe set into something else in .rescx
      // file.
      // How to use it template:
      // <a href="[EasyDNNnews:ReadMore]">
      // [EasyDNNnews:ReadMore:Title]</a>
      //   List_
      //    Article details
      //   {STARTT[EasyDNNnews:IfExists:Details][EasyDNNnews:EndIf:Details]
      //  Description:
      // Checks if article detail type is set to
      // text and then displays content between
      // the tokens. If the article detail type
      // is not set to text the content between
      // tokens is deleted.
      //   List_
      //  [EasyDNNnews:IfNotExists:Details][EasyDNNnews:EndIf:Details]
      //  Description:
      // Checks if article detail type is not
      // set to text and then displays content
      // between the tokens. If the article
      // detail type is set to text the content
      // between tokens is deleted.
      //   List_
      //  [EasyDNNnews:IfExists:DetailType:...][EasyDNNnews:EndIf:DetailType]
      //   Description:
      // Checks if article detail type is set to
      // specified type and then displays
      // content between the tokens. If the
      // article detail type is set to text the
      // content between tokens is deleted.
      // Values for detail type: Text, Page,
      // Link, File. Example token:
      // [EasyDNNnews:IfExists:DetailType:File]
      //    List_

      //    Article detail is file.
      // [EasyDNNnews:EndIf:DetailType]
      //       Article image and media
      //   [EasyDNNnews:Image]
      //  Description:
      // Main article image.
      // How to use it in template:
      // <img src="[EasyDNNnews:Image]"/>
      //   o List_
      // o Details_
      //  [EasyDNNnews:Image:Width:100:Height:100]
      //  Description:
      // Main article image with width and
      // height set.
      //   o List_
      // o Details_
      //  [EasyDNNnews:Image:Visibility]
      //  Description:
      // If the image does not exist it does not
      // shows the element where is set.
      // "example":"<div class=“imageclass“",
      // [EasyDNNnews:Image:Visibility]>
      // <img src=“[EasyDNNnews:Image]“</>
      // </div>
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:Image][EasyDNNnews:EndIf:Image]
      //  If an image exists then the content
      // placed between these tokens will be
      // displayed.
      //   o Details_
      //  [EasyDNNnews:IfNotExists:Image][EasyDNNnews:EndIf:Image]
      //  If an image does not exist then the
      // content placed between these tokens
      // will be displayed.
      //   o Details_
      //  [EasyDNNnews:IfMediaType:Image][EasyDNNnews:EndIfMediaType]
      //  Description:
      // Between these two tokens you can place
      // the HMTL that would be show if the main
      // article image is set.
      //   o Details_
      //  [EasyDNNnews:IfMediaType:EmbedMedia][EasyDNNnews:EndIfMediaType]
      //  Description:
      // Between these two tokens you can place
      // the HTML and the token that will be
      // shown in the main article is set to
      // another media than image.
      //   o Details_
      //  [EasyDNNnews:MainMedia:Widht:600:Height:30
      // 0]
      //  Description:
      // Token has two parameters Width and
      // Height. IT is the size in pixels of the
      // media that will be shown
      //   o Details_
      //  {STARTT[EasyDNNnews:IfExists:MainImageTitle][EasyDNNnews:EndIf:MainImageTitle]
      //  Description:
      // Checks if article image is set and it
      // has title set and then displays content
      // between the tokens otherwise the
      // content between tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:MainImageDescription
      // ][EasyDNNnews:EndIf:MainImageDescription]
      //  Description:
      // Checks if article image is set and it
      // has description set and then displays
      // content between the tokens otherwise
      // the content between tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:MainImageTitle]
      //  Description:
      // Checks if article image is set and it
      //    o List_
      // o Details_
        
      //    has title set and then displays image
      // title otherwise it displays nothing.
      //     [EasyDNNnews:MainImageDescription]
      //  Description:
      // Checks if article image is set and it
      // has description set and then displays
      // image description otherwise it displays
      // nothing.
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:Gallery][EasyDNNnews:EndIf:Gallery]
      //  Description:
      // Checks if article gallery is set. If it
      // is then it displays content between the
      // tokens otherwise the content between
      // tokens is deleted.
      //   Details_
      //  [EasyDNNnews:IfNotExists:Gallery]",
      //        "[EasyDNNnews:EndIf:Gallery]
      //  Description:
      // Checks if article gallery is set. If it
      // is not then it displays content between
      // the tokens otherwise the content
      // between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:GravityGallery]
      //  Description:
      // Checks if article gallery is set and
      // the gallery display type is set to
      // Gravity gallery then it displays
      // gallery media.
      //   Details_
      //  [EasyDNNnews:GalleryBackLink]
      //  Description:
      // Displays link to EasyDNNgalery module
      // showing media in Gravity display type.
      //   Details_
      //  [EasyDNNnews:IfExists:GalleryBackLink]
      //   "[EasyDNNnews:EndIf:GalleryBackLink]
      //  Description:
      // Checks if link is set to EasyDNNgallery module. If it is then it displays content between the tokens otherwise the content between tokens is deleted.
      //   Details_
      //    Dates
      //   [EasyDNNnews:PublishDateShort]
      //  Description:
      // Publish date.
      // "example":"11/27/2011",
      //   o List_
      // o Details_
      //  [EasyDNNnews:PublishDateTime]
      //  Description:
      // Publish date and time.
      // "example":"11/27/2011 2:35:00 PM",
      //   o List_
      // o Details_
      //  [EasyDNNnews:PublishDate]
      //  Description:
      // Publish date with day and month names.
      // "example":"Sunday, November 27, 2011",
      //   o List_
      // o Details_
      //  [EasyDNNnews:PublishYear]
      //  Description:
      // Publish year.
      // "example":"2011",
      //   o List_
      // o Details_
      //  [EasyDNNnews:Month]
      //  Description:
      // Publish month.
      //    o List_
      // o Details_
        
      //    Example:
      // 11
      //     [EasyDNNnews:PublishDay]
      //  Description:
      // Publish day.
      // "example":"27",
      //   o List_
      // o Details_
      //  [EasyDNNnews:PublishMonthString]
      //  Description:
      // Short publish month.
      // "example":"Nov, Dec, Oct...",
      //   o List_
      // o Details_
      //  [EasyDNNnews:FormatedDate:dateformat]
      //  Description:
      // Displays article published date in various formats. dateformat parameter is Microsoft standard date and time format string. For a full list of examples visit http://msdn.microsoft.com/en‐ us/library/az4se3k1.aspx.
      // Examples:
      // [EasyDNNnews:FormatedDate:dd,MM,yy]‐
      // output: 23,04,13
      // [EasyDNNnews:FormatedDate:ddd‐MMM‐yy]‐
      // output: Tue‐Apr‐13
      //   o List_
      // o Details_
      //  [EasyDNNnews:FormatedLastModifiedDate:date format]
      //  Description:
      // Displays article last modified date in various formats. dateformat parameter is Microsoft standard date and time format string.
      //   o List_
      // o Details_
      //  [EasyDNNnews:FormatedExpireDate:  dateformat]
      //  Description:
      // Displays article expire date in various formats. dateformat parameter is Microsoft standard date and time format string.
      //   o List_
      // o Details_
      //    Categories
      //   [EasyDNNnews:Categories separator=", "
      //                     nolink last color]
      //   Description:
      // Shows all article categories separated by comma with active link.
      // "example":"Category1, Category2, Category3",
      // separator="" ‐ the content placed between quotation marks will be displayed between the categories. By default the categories will be separated with comma “,”.
      // nolink – this option will display the categories only as a text without a link.
      // last – this option will display only the last category that article is in.
      //       o List_
      // o Details_
       
      //    color – this option will display category color name. If none is set it display default.
      //     [EasyDNNnews:Categories:Description]
      //  Description:
      // Return description of first category.
      //   o List_
      // o Details_
      //  [EasyDNNnews:Categories:Image:Width:140:He
      //                      ight:140:Resize:Crop]
      //  Description:
      // Return relative path to first category
      // image. Parameters width, height and
      // resize are optional.
      // Width:140 – width of the thumbnail in
      // pixels.
      // Height:140 – height of the thumbnail in
      // pixels.
      // Resize – resize method. Possible
      // values: Crop, Proportional.
      //   o
      //    Tags
      //   [EasyDNNnews:Tags separator=", " nolink]
      //  Description:
      // Shows all article tags separated by
      // comma with active link.
      // "example":"Tag1, Tag2, Tag3",
      // separator="" ‐ the content placed between quotation marks will be displayed between the tags. By default the tags will be separated with comma “,”.
      // nolink – this option will display the tags only as a text without a link.
      //      o List_
      // o Details_
      //    Previous next article
      //   [EasyDNNnews:IfExists:PreviousArticleLink][EasyDNNnews:EndIf:ArticlePreviousNext]
      //  Description:
      // Checks if article has previous or next
      // article. If it has then displays
      // content between the tokens. If it does
      // not the content between tokens is
      // deleted.
      //   Details_
      //  [EasyDNNnews:IfExists:PreviousArticleLink][EasyDNNnews:EndIf:PreviousArticleLink]
      //  Description:
      // Checks if article has previous article.
      // If it has then it displays content
      // between the tokens. If it does not the
      // content between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:PreviousArticleLink]
      //  Description:
      // Displays previous article link
      //   Details_
      //  [EasyDNNnews:PreviousArticleTitle]
      //  Description:
      // Displays previous article title
      //    Details_
       
      //   [EasyDNNnews:PreviousArticle:IfExists:Imag
      //                     e][EasyDNNnews:PreviousArticle:EndIf:Image]
      //  Description:
      // Checks if previous article has image.
      // If it does then displays content
      // between the tokens. If it does not the
      // content between tokens is deleted.
      //    Details_
      //  [EasyDNNnews:PreviousArticle:IfNotExists:I
      //                   mage][EasyDNNnews:PreviousArticle:EndIf:Image]
      //  Description:
      // Checks if previous article has image.
      // If it does not then it displays content
      // between the tokens. If it does the
      // content between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:PreviousArticle:Image:Width:1
      //         40:Height:140:Resize:Crop]
      //  Description:
      // Displays previous article image.
      //    [EasyDNNnews:IfExists:NextArticleLink][EasyDNNnews:EndIf:NextArticleLink]
      //  Description:
      // Checks if article has next  article. If
      // it has then it displays content between
      // the tokens. If it does not the content
      // between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:NextArticleLink]
      //  Description:
      // Displays next article link
      //   Details_
      //  [EasyDNNnews:NextArticleTitle]
      //  Description:
      // Displays next article title
      //   Details_
      //  [EasyDNNnews:NextArticle:IfExists:Image][EasyDNNnews:NextArticle:EndIf:Image]
      //  Description:
      // Checks if next article has image. If it
      // does then it displays content between
      // the tokens. If it does not the content
      // between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:NextArticle:IfNotExists:Image ][EasyDNNnews:NextArticle:EndIf:Image]
      //  Description:
      // Checks if next article has image. If it
      // does not then it displays content
      // between the tokens. If it does not the
      // content between tokens is deleted.
      //   Details_
      //  [EasyDNNnews:NextArticle:Image:Width:140:H
      //           eight:140:Resize:Crop]
      //  Description:
      // Displays next article image.
      //   Details_
      //        Comments
      //   [EasyDNNnews:IfExists:Comments][EasyDNNnews:EndIf:Comments]
      //  Description:
      // Checks if article has comments. If it
      // has then it displays content between
      // the tokens. If it does not the content
      // between tokens is deleted.
      //   o Details_ o List_
      //  [EasyDNNnews:IfNotExists:Comments][EasyDNNnews:EndIf:Comments]
      //  Description:
      // Checks if article has comments. If
      // article does not have comments then it
      // displays content between the tokens. If
      // it does not the content between tokens
      // is deleted.
      //   o Details_ o List_
      //  [EasyDNNnews:Comments]
      //  Description:
      // Number of comments.
      //   o List_
      // o Details_
      //  [EasyDNNnewsComment:DateAdded]
      //  Description:
      // Comment added date..
      //   o Comments_
      //  [EasyDNNnewsComment:Author]
      //  Description:
      // Comment author.
      //   o Comments_
      //  [EasyDNNnewsComment:GravatarImage]
      //  Description:
      // Shows comment’s authors Gravatar image.
      //    o Comments_
          
      //   [EasyDNNnewsComment:Comment]
      //  Description:
      // Displays comment.
      //    o Comments_
      //    Article link
      //   [EasyDNNnews:ArticleLink]
      //  Description:
      // Link to article details.
      //   o List_
      //    Paid content
      //   [EasyDNNnews:PaidContentStart]
      //  Description:
      // Marks the start of paid content.
      //   o Article content
      //  [EasyDNNnews:PaidContentEnd]
      //  Description:
      // Marks the end of paid content.
      //   o Article content
      //  [EasyDNNnews:UnPaidContentStart]
      //  Description:
      // Marks the start of non‐paid content
      // which is displayed when user does not
      // have privileges to see the paid
      // content.
      //   o Article content
      //  [EasyDNNnews:UnPaidContentEnd]
      //  Description:
      // Marks the end of non‐paid content which
      // is displayed when user does not have
      // privileges to see the paid content.
      //   o Article content
      //    Author profile related tokens
      //   [EasyDNNnews:IfExists:AuthorProfile]
      //  Description:
      // This token marks the start of the profile of the author. The following tokens should be placed between the start and end profile tokens:
      //   o Details_
      //  [EasyDNNnews:Author:FirstName]
      //  Description:
      // DNN name of the author (user).
      //   o Details_ o List_
      //  [EasyDNNnews:Author:LastName]
      //  Description:
      // DNN name of the author (user).
      //   o Details_ o List_
      //  [EasyDNNnews:Author:FullInfo]
      //  Description:
      // Author's biography that will be
      // displayed in Lightbox. Author's
      // biography can be localized by editing
      // the „FullBioText.Text” record into
      // .rscx file.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:ShortInfo]
      //  Description:
      // A short info about the author which
      // appears on the page.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:DateAdded]
      //  Description:
      // Date of when author's profile is added.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:Link]
      //  Description:
      // Displays HTML a tag with link which
      // will list all author's articles.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:LinkID]
      //  Description:
      // Displays a URL link which will list all
      // author's articles.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:RSSURL]
      //  Description:
      // Displays a link to the author's rss.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:Contact]
      //  Description:
      // Displays the author’s contact form in
      // Lightbox.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:Image:Width:65:Height:
      // 50:Resize:Crop]
      //  Description:
      // Displays the author's photo or avatar.
      // It is possible to set: width, height,
      // resize (Crop or Proportional).
      //   o Details_ o List_
      //  [EasyDNNnews:Author:Facebook]
      //  Description:
      // A link to the author's Facebook page.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:Twitter]
      //  Description:
      // A link to the author's Twitter page.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:GooglePlus]
      //  Description:
      // A link to the author's Google+ page.
      //   o Details_ o List_
      //  [EasyDNNnews:Author:LinkedIn]
      //  Description:
      //    o Details_
             
      //    A link to the author's LinkedIn page.
      //    o List_
      //  [EasyDNNnews:EndIf:AuthorProfile]
      //  Description:
      // This token marks the end of the
      // author’s box.
      //   o Details_ o List_
      //  [EasyDNNnews:IfExists:AuthorGroup]
      //  Description:
      // Marks the start of the profile group.
      // The following tokens should be placed
      // between the start and end group tokens:
      //   o Details_
      //  [EasyDNNnews:Author:GroupName]
      //  Description:
      // Displays the group’s name.
      //   o Details_
      //  [EasyDNNnews:Author:GroupInfo]
      //  Description:
      // Displays the group’s info.
      //   o Details_
      //  [EasyDNNnews:Author:GroupContact]
      //  Description:
      // Opens the group’s contact form in
      // Lightbox.
      //   o Details_
      //  [EasyDNNnews:Author:GroupImage:Width:65:He
      // ight:50:Resize:Crop]
      //  Description:
      // Displays the author’s photo or avatar.
      // It is possible to set width, height and
      // resize option (crop or proportional).
      //   o Details_
      //  [EasyDNNnews:Author:GroupFacebook]
      //  Description:
      // A link to the group’s Facebook page.
      //   o Details_
      //  [EasyDNNnews:Author:GroupTwitter]
      //  Description:
      // A link to the group’s Twitter page.
      //   o Details_
      //  [EasyDNNnews:Author:GroupGooglePlus]
      //  Description:
      // A link to the group’s Google+ page.
      //   o Details_
      //  [EasyDNNnews:Author:GroupLinkedIn]
      //  Description:
      // A link to the group’s LinkedIn page.
      //   o Details_
      //  [EasyDNNnews:EndIf:AuthorGroup]
      //  Description:
      // This token marks the end of the group’s
      // box. All the box related tokens should
      // be placed between the start and end
      // group tokens.
      //   o Details_
      //  [EasyDNNnews:Author:DNNProfileLink]
      //  Description:
      // Displays link to the DNN user profile
      // of article author.
      // "example":"http://www.mywebsite.com/ActivityFeed/t",
      // abid/60/userId/1/Default.aspx
      //   o List_
      // o Details_
      //    Social Sharing tokens
      //   [EasyDNNnewsSystemToken:SysFacebookLikeBut
      //                                       ton]
      //  Description:
      // Facebook Like button.
      //   o List_
      // o Details_
      //  [EasyDNNnewsSystemToken:SysFacebookShareBu
      //                                      tton]
      //  Description:
      // Facebook Share button.
      //   o List_
      // o Details_
      //  [EasyDNNnewsSystemToken:SysTwitter]
      //  Description:
      // Twitter Button.
      //   o List_
      // o Details_
      //  [EasyDNNnewsSystemToken:SysGooglePlus]
      //  Description:
      // Google Plus button.
      //   o List_
      // o Details_
      //  [EasyDNNnewsSystemToken:SysAddThis]
      //  Description:
      // AddThis service button with Facebook,
      // Twitter and Google Plus.
      //   o List_
      // o Details_
      //    Events
      //   [EasyDNNnews:EventDate]
      //   Description:
      // Displays a date formatted according to an event type.
      // "example":"The event starts and ends on the same",
      // day. It is not all‐day event: 7/4/2012
      // 12:00 AM ‐ 16:00 PM .
      //    o List_
      // o Details_
            
      //    The event last for more than one day.
      // It is all‐day event:
      // 7/4/2012 12:00 AM ‐ 7/5/2012 12:00 PM
      // The event starts and ends the same day.
      // It is all day event:
      // 7/4/2012
      // The event last for more than one day.
      // It is  all‐day event:
      // 7/4/2012 ‐ 7/5/2012
      //     [EasyDNNnews:EventStartDate]
      //  Description:
      // Start date of the event. Example: 7/4/2012
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartTime]
      //  Description:
      // Start time of the event.
      // "example":"12:00 PM",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndDate]
      //  Description:
      // End date of the event.
      // "example":"7/5/2012",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndTime]
      //  Description:
      // End time of the event.
      // "example":"12:00 PM",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartDay]
      //  Description:
      // Start day of event. This will display only day in month.
      // "example":"5",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartMonth]
      //  Description:
      // Start month of event. This will display only month number.
      // "example":"7",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartYear]
      //  Description:
      // Year of event. This will display only year.
      // "example":"2012",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndDay]
      //  Description:
      // End day of event. This will display only day in month.
      // "example":"6",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndMonth]
      //  Description:
      // End month of event. This will display only month number.
      // "example":"7",
      //    o List_
      // o Details_
         
      //   [EasyDNNnews:EventEndYear]
      //  Description:
      // Year when event ends. This will display only year.
      // "example":"2012",
      //    o List_
      // o Details_
      //  [EasyDNNnews:EventStartMonthNameS
      //                             hort]
      //  Description:
      // Starting month of event. This will display short month name. Example:
      // Jun
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndMonthNameSho
      //                               rt]
      //  Description:
      // Ending month of event. This will display short month name. Example:
      // Jul
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartMonthNameL
      //                              ong]
      //  Description:
      // Starting month of event. This will display full month name.
      // "example":"July",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndMonthNameLon
      //                                g]
      //  Description:
      // Ending month of event. This will display full month name. Example:
      // August
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartDayNameSho
      //                               rt]
      //  Description:
      // Starting day of event. This will display short day name.
      // "example":"Wed",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndDayNameShort
      //                                 ]
      //  Description:
      // Ending day of event. This will display short day name.
      // "example":"Fri",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventStartDayNameLon
      //                                g]
      //  Description:
      // Starting day of event. This will display full day name.
      // "example":"Wednesday",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventEndDayNameLong]
      //  Description:
      // Ending day of event. This will display full day name.
      // "example":"Friday",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventTimeZone]
      //  Description:
      // Displays time zone of an event.
      // "example":"Central European Standard Time",
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventFormatedStartDate:datefo rmat]
      //  Description:
      // Displays event start date in various formats. dateformat parameter is Microsoft standard date and time format string. For a full list of examples visit http://msdn.microsoft.com/en‐ us/library/az4se3k1.aspx.
      //    o List_
      // o Details_
        
      //    Examples:
      // [EasyDNNnews: EventFormatedStartDate:
      // dd,MM,yy]‐ output: 23,04,13
      // [EasyDNNnews: EventFormatedStartDate:
      // ddd‐MMM‐yy]‐ output: Tue‐Apr‐13
      //     [EasyDNNnews:EventFormatedEndDate:dateform at]
      //  Description:
      // Displays event end date in various formats. dateformat parameter is Microsoft standard date and time format string.
      // For a full list of examples visit
      // http://msdn.microsoft.com/en‐
      // us/library/az4se3k1.aspx.
      // Examples:
      // [EasyDNNnews:EventFormatedEndDate:
      // dd,MM,yy]‐ output: 23,04,13
      // [EasyDNNnews:EventFormatedEndDate: ddd‐
      // MMM‐yy]‐ output: Tue‐Apr‐13
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:EventLocation][EasyDNNnews:EndIf:EventLocation]
      //  Description:
      // Checks if article has map and if the
      // map has marker location set. If this is
      // true the content between the tokens
      // will display otherwise the content
      // between tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventLocation]
      //  Description:
      // Checks if article has map and if the
      // map has marker location set. If this is
      // true the token will be replaced with
      // marker name.
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:EventAllDay][EasyDNNnews:EndIf:EventAllDay]
      //  Description:
      // Checks if event is an all‐day event. If
      // this is true the content between the
      // tokens will display otherwise the
      // content between tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews: IfNotExists:EventAllDay][EasyDNNnews:EndIf:EventAllDay]
      //  Description:
      // Checks if event is an all‐day event. If
      // this is not true the content between
      // the tokens will display otherwise the
      // content between tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfNotExists:EventRegistration
      // ][EasyDNNnews:EndIf:EventRegistration]
      //  Description:
      // Checks if event has registration
      // enabled. If it does not have
      // registrations enabled the content
      // between the tokens is displayed
      // otherwise the content between tokens is
      // deleted.
      //    o List_
      // o Details_
      
      //   [EasyDNNnews:IfExists:EventRegistration][EasyDNNnews:EndIf:EventRegistration]
      //  Description:
      // Checks if event has registration
      // enabled. If it does have registrations
      // enabled the content between the tokens
      // is displayed otherwise the content
      // between tokens is deleted.
      //    o List_
      // o Details_
      //  [EasyDNNnews:IfExists:Payment][EasyDNNnews:EndIf:Payment]
      //  Description:
      // Checks if event payments are enabled.
      // If it does have payments enabled the
      // content between the tokens is displayed
      // otherwise the content between tokens is
      // deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventRegistration:ListOfAtten
      //                                     dants]
      //  Description:
      // Displays the list of attendees to the
      // event. It displays first name, last
      // name and number of seats.
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventRegistration:NotUsedTick
      //                                       ets]
      //  Description:
      // Displays the number of available event
      // tickets.
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventRegistration:NumberOfAtt
      //                                   endants]
      //  Description:
      // Displays the number of attendees to an
      // event.
      //   o List_
      // o Details_
      //  [EasyDNNnews:Price]
      //  Description:
      // Displays the Price for the event.
      //   o List_
      // o Details_
      //  [EasyDNNnews:EventUser:DisplayName]
      //  Description:
      // Displays the current user Display name.
      //   o Details_
      //  [EasyDNNnews:IfExists:EventPayment:Offline
      // ][EasyDNNnews:EndIf:EventPayment:Offline]
      //  Description:
      // Checks if event offline payment mode is
      // enabled. If it has the content between
      // the tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Details_
      //  [EasyDNNnews:IfNotExists:EventPayment:Offl
      // ine][EasyDNNnews:EndIf:EventPayment:Offlin
      //                                         e]
      //  Description:
      // Checks if event offline payment mode is
      // enabled. If it hasn’t the content
      // between the tokens is displayed
      // otherwise the content between tokens is
      // deleted.
      //   o Details_
      //  [EasyDNNnews:IfExists:EventPayment:PayPal][EasyDNNnews:EndIf:EventPayment:PayPal]
      //  Description:
      // Checks if event PayPal payment mode is
      // enabled. If it has the content between
      // the tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Details_
      //  [EasyDNNnews:IfNotExists:EventPayment:PayP
      // al][EasyDNNnews:EndIf:EventPayment:PayPal]
      //  Description:
      // Checks if event PayPal payment mode is
      // enabled. If it hasn’t the content
      // between the tokens is displayed
      // otherwise the content between tokens is
      // deleted.
      //   o Details_
      //  [EasyDNNnews:EventRegistration:ReservedSea
      //                                        ts]
      //  Description:
      // Displays the number of reserved seats
      // for the event.
      //    o Details_
         
      //   [EasyDNNnews:EventPayment:Status]
      //  Description:
      // Displays the payment status for the
      // current user for the event.
      //    o Details_
      //  [EasyDNNnews:EventPayment:SubTotal]
      //  Description:
      // Displays the price before the discount
      // and tax are calculated.
      //   o Details_
      //  [EasyDNNnews:EventPayment:Discount]
      //  Description:
      // Displays the discount amount for the
      // event.
      //   o Details_
      //  [EasyDNNnews:EventPayment:TaxValue]
      //  Description:
      // Displays the tax amount for the event.
      //   o Details_
      //  [EasyDNNnews:EventPayment:EstimatedTotal]
      //  Description:
      // Displays the price after the discount
      // and tax are calculated.
      //   o Details_
      //  [EasyDNNnews:IfExists:EventPayment:PayPalL
      //                                       ink][EasyDNNnews:EndIf:EventPayment:PayPalLink
      //                                          ]
      //  Description:
      // Checks if PayPal payment link exists.
      // If it does the content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Details_
      //  [EasyDNNnews:EventPayment:PayPalLink]
      //  Description:
      // Displays PayPal payment URL.
      //   o Details_
      //  [EasyDNNnews:EventPayment:Info]
      //  Description:
      // Displays current payment status and
      // info.
      //   o Details_
      //  [EasyDNNnews:EventRegistration:RegisterBut
      //                                       ton]
      //  Description:
      // Displays register button that will open
      // popup where user can register for an
      // event.
      //   o Details_
      //    Documents
      //   [EasyDNNnews:DocumentList]
      //  Description:
      // Displays documents that were added to
      // the article.
      //   o List_
      // o Details_
      //  [EasyDNNnews:Document:Title]
      //  Description:
      // Displays documents title.
      //   Documents template
      //  [EasyDNNnews:Document:Description]
      //  Description:
      // Displays documents description.
      //   Documents template
      //  [EasyDNNnews:Document:Link]
      //  Description:
      // Displays documents download link.
      //   Documents template
      //  [EasyDNNnews:Document:DateUploaded]
      //  Description:
      // Displays documents date uploaded.
      //   Documents template
      //  [EasyDNNnews:Document:NumberOfDownloads]
      //  Description:
      // Displays number of document downloads.
      //   Documents template
      //  [EasyDNNnews:Document:FileSize]
      //  Description:
      // Displays documents file size.
      //    Documents template
          
      //   [EasyDNNnews:Document:FileExtension]
      //  Description:
      // Displays document file extension.
      //    Documents template
      //  [EasyDNNnews:Document:Owner]
      //  Description:
      // Displays document Owner‐ uploader.
      //   Documents template
      //  [EasyDNNnews:Document:Type]
      //  Description:
      // Displays document file extension.
      //   Documents template
      //  [EasyDNNnews:Document:Icon]
      //  Description:
      // Displays document icon.
      //   Documents template
      //  [EasyDNNnews:Document:Target]
      //  Description:
      // Displays a html a tag target option.
      //   Documents template
      //    Article maps
      //   [EasyDNNnews:ArticleMaps]
      //  Description:
      // This token displays a Google map if the
      // map exists.
      //   o Details_ o List_
      //    Article links
      //   [EasyDNNnews:Link:Title]
      //  Description:
      // Displays link title.
      //   Links template
      //  [EasyDNNnews:Link:Description]
      //  Description:
      // Displays link description.
      //   Links template
      //  [EasyDNNnews:Title]
      //  Description:
      // Article title.
      //   Links template
      //  [EasyDNNnews:SubTitle]
      //  Description:
      // Article subtitle.
      //   Links template
      //  [EasyDNNnews:Summary]
      //  Description:
      // Article summary.
      //   Links template
      //  [EasyDNNnews:Article]
      //  Description:
      // Main article content.
      //   Links template
      //  [EasyDNNnews:Image]
      //  Description:
      // Main article image.
      //   Links template
      //  [EasyDNNnews:PublishDate]
      //  Description:
      // Publish date with day and month names.
      //   Links template
      //  [EasyDNNnews:Author:Link]
      //  Description:
      // Displays a link which will list all
      // author's articles.
      //   Links template
      //  [EasyDNNnews:Link:Target]
      //  Description:
      // Displays a html a tag target option.
      //   Links template
      //  [EasyDNNnews:EventTimeZone]
      //  Description:
      // Displays time zone of an event.
      //   Links template
      //    Related articles
      //   [EasyDNNnews:RelatedArticles]
      //  Description:
      // Displays related articles.
      //   Details_
      //  [EasyDNNnews:RelatedArticle:IfExists:Image
      // ][EasyDNNnews:RelatedArticle:EndIf:Image]
      //  Description:
      // If an image exists then the content
      // placed between these tokens will be
      // displayed.
      //    Related articles template
           
      //   [EasyDNNnews:RelatedArticle:IfNotExists:Im
      // age][EasyDNNnews:RelatedArticle:EndIf:Image]
      //  Description:
      // If an image does not exists then the
      // content placed between these tokens
      // will be displayed.
      //    Related articles template
      //  [EasyDNNnews:Image]
      //  Description:
      // Displays article image URL.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Image:Width:10
      // 0:Height:100]
      //  Description:
      // Displays article image URL with
      // dimensions set to 100px x 100px,
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Title:Limit:10
      // 0]
      //  Description:
      // Displays article title with limit set
      // to 100 characters.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Title]
      //  Description:
      // Displays article title.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:SubTitle:Limit
      // :100]
      //  Description:
      // Displays article subtitle with limit
      // set to 100 characters.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:SubTitle]
      //  Description:
      // Displays article subtitle.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Summary:Limit:
      // 100]
      //  Description:
      // Displays article summary with limit set
      // to 100 characters.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Summary]
      //  Description:
      // Displays article summary.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Article:Limit:
      // 100]
      //  Description:
      // Displays article text with limit set to
      // 100 characters.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Article]
      //  Description:
      // Displays article text.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:EventTimeZone
      // ]
      //  Description:
      // Displays portal time zone.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Author]
      //  Description:
      // Displays related article author.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Author:Link]
      //  Description:
      // Displays related article author link.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:Link]
      //  Description:
      // Displays related article URL.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:IfExists:Event ][EasyDNNnews:RelatedArticle:EndIf:Event]
      //  Description:
      // Checks if related article is an event.
      // If it is the content between the tokens
      // is displayed otherwise the content
      // between tokens is deleted.
      //   Related articles template
      //  [EasyDNNnews:RelatedArticle:IfNotExists:Ev
      // ent][EasyDNNnews:RelatedArticle:EndIf:Event]
      //  Description:
      // Checks if related article is an event.
      // If it is not the content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //    Related articles template
            
      //   [EasyDNNnews:RelatedArticle:EventFormatedS
      // tartDate:dateformat]
      //  Description:
      // Displays event start date in various formats. dateformat parameter is Microsoft standard date and time format string. For a full list of examples visit http://msdn.microsoft.com/en‐ us/library/az4se3k1.aspx.
      //    Related articles template
      //  [EasyDNNnews:RelatedArticle:EventFormatedE
      // ndDate:dateformat]
      //  Description:
      // Displays event end date in various formats. dateformat parameter is Microsoft standard date and time format string. For a full list of examples visit http://msdn.microsoft.com/en‐ us/library/az4se3k1.aspx.
      //   Related articles template
      //  Custom fields tokens
      //  Description:
      // You can add any custom field token in
      // the related articles template.
      //   Related articles template
      //        Article rating
      //   [EasyDNNnews:ArticleRating]
      //  Description:
      // Shows article rating. In Details_ gives
      // option to rate article.
      //   o List_
      // o Details_
      //  [EasyDNNnews:ArticleRatingNumber]
      //  Description:
      // Displays article rating. Example: 4.56
      //   o List_
      // o Details_
      //    RSS related tokens
      //   [EasyDNNnews:IfExists:RSS][EasyDNNnews:EndIf:RSS]
      //  Description:
      // Checks any article is listed and option
      // to show RSS feed is turned on. If it is
      // the content between the tokens is
      // displayed otherwise the content between
      // tokens is deleted.
      //   o List_
      // It is placed inside <!‐‐ ArticleRepeat:After ‐‐>
      //  [EasyDNNnews:RSSLink]
      //  Description:
      // Displays RSS link.
      //   o List_
      // o It is placed inside
      // <!‐‐
      //     ArticleRepeat:After
      // ‐‐>
      //    Banners module integration
      //   [EasyDNNnews:Banners:Source:Portal:Type:ba
      //        nner:Group:Group1:Count:1:Repeat:3]
      //   Description:
      // This token enables integration with DNN
      // Banners module. For this token to work
      // you need to setup Vendors and their
      // banner on the porta or host. Toke has
      // following options:
      // Source: Select source for the banners. ‐ possible values: portal or host
      // Type: Select a type of Banner to
      // display.
      // ‐ possible values: Banner, MicroButton, Button, Block, SkyScrapper, Text, Script,
      // Group: Name of the Banners group.
      // Count: Number of banners to display.
      //    o List_
      // o Details_
       
      //    Repeat: If we are listing articles
      // repeat banners after n articles.
      //       Tokens available in article content
      //   [EasyDNNGallery|1|Width|200|Height|200|pos
      // ition||resizecrop|False|lightbox|False|tit
      // le|False|description|False|redirection|Fal
      //                             se|LinkText||]
      //  Description:
      // This token enables displaying media
      // form the article galley inside article
      // content. Options and possible values:
      // EasyDNNGallery|1| ‐ id of the image to
      // display.
      // Width|200 – width of the thumbnail to
      // display.
      // Height|200 – height of the thumbnail to
      // display.
      // position|left – name of CSS class that
      // will be added to the div that surrounds
      // the image
      // resizecrop|False – True/False ‐ resize
      // and crop thumbnail. If True
      // proportional metod of resizing is used.
      // lightbox|False ‐ True/False –enable
      // opening media in lightbox.
      // title|False ‐ True/False – show media
      // title.
      // description|False ‐ True/False – show
      // media description.
      // redirection|False ‐ True/False – If
      // image has set redirection URL on click
      // rediredt to tht URL.
      // LinkText| ‐ Instead of thumbnail
      // display text link.
      //   o Article content
      //  [EasyDNNnewsDocument|4330]
      //  Description:
      // Displays download link for the article
      // document. Options:
      // EasyDNNnewsDocument|4330 – id of the
      // document.
      //   o Article content
      //  [EasyDNNnewsLink|3557]
      //  Description:
      // Displays link defined in the article
      // link section. Options:
      // EasyDNNnewsLink|3557 – id of the link.
      //   o Article content
      //  [EasyDNNnews:IfExists:GalleryImage:Positio
      //                                         n][EasyDNNnews:GalleryImage:Position:Width:2
      //         00:Height:200:Resize:Proportional][EasyDNNnews:EndIf:GalleryImage]
      //  Description:
      // Set of tokens to display image from the
      // article gallery based on the image
      // position in the gallery. First the
      // check if performed if image at
      // specified position exists. If it does
      // then the thumbnail of the image is
      // displayed. Options:
      // GalleryImage:Position – position of the
      // image in the gallery.
      //    o Article content

      //    Width:200 ‐  width of the thumbnail to
      // display
      // Height:200 ‐  height of the thumbnail
      // to display –
      // Resize:Proportional – Crop/
      // Proportional – method of thumbnail
      // resizing.
      //       Tokens available in Catalog view
      //   [EasyDNNnews:CatalogBreadCrumbTitle]
      //  Description:
      // Category name in BreadCrumb pane.
      // "example":"Category1",
      //   o List_Catalog_
      // o Details_Catalog_
      // It is placed inside <!‐‐
      // BreadCrumbTemplate‐‐> pane
      //  [EasyDNNnews:CatalogBreadCrumbLink]
      //  Description:
      // Display BreadCrumb link of current
      // category position.
      // "example":"Category 1 > category 2",
      //   o List_Catalog_
      // o Details_Catalog_
      // It is placed inside <!‐‐
      // BreadCrumbTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryTitle]
      //  Description:
      // Displays category title.
      // "example":"Category 1",
      //   o List_Catalog_
      // o Details_Catalog_
      // It is placed inside <!‐‐
      // HeaderTemplate‐‐>
      // <!‐‐CategoryTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryDescription]
      //  Description:
      // Displays category description.
      //   o List_Catalog_
      // o Details_Catalog_
      // It is placed inside <!‐‐
      // HeaderTemplate‐‐>
      // <!‐‐CategoryTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryURL]
      //  Description:
      // Displays category link.
      //   o List_Catalog_
      // o Details_Catalog_
      // It is placed inside <!‐‐
      // CategoryTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryImage]
      //  Description:
      // Category image.
      // How to use it template:
      // <img
      // src="[EasyDNNnews:CatalogCategoryImage]
      // "/>
      //   o List_Catalog_
      // It is placed inside <!‐‐
      // CategoryTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryImage:Width:30
      //                              0:Height:200]
      //  Description:
      // Category image with width and height
      // set to 300x200.
      //   o List_Catalog_
      // It is placed inside <!‐‐
      // CategoryTemplate‐‐>
      //  [EasyDNNnews:CatalogCategoryImage:Visibili
      //                                        ty]
      //  Description:
      // If the image does not exist it does not
      // shows the element where is set.
      // "example":"<div class=“imageclass“",
      // [EasyDNNnews:CatalogCategoryImage:Visib
      // ility]><img
      // src=“[EasyDNNnews:CatalogCategoryImage]
      // “</></div>
      //   o List_Catalog_
      // It is placed inside <!‐‐
      // CategoryTemplate‐‐>
      //    Unsorted tokens
      //   [EasyDNNnews:NumberOfViews]
      //  Description:
      // Number of article views.
      //   o List_
      // o Details_
      //  [EasyDNNnewsLocalizedText:
      //             SomeText.Text]
      //  Description:
      // All words in template can be localized
      // by adding SomeText.Text record with
      // value into .rescx file.
      //   o List_
      // o Details_
      //  [EasyDNNnews:PageBreak]
      //  Description:
      //    o Article content
         
      //    With this token article can be split
      // into multiple pages. Put this in the
      // text where you want to split the
      // article.
      //     [EasyDNNnews:CurrentPageURL]
      //  Description:
      // Display current article URL.
      //   o Details_
      //  [EasyDNNnews:ItemOrderClasses]
      //  Description:
      // It displays two classes for use in CSS.
      // First one is “odd” or “even” and the
      // second one is “itemnumber”.
      //   o List_
      //  [EasyDNNnews:ArticleID]
      //  Description:
      // Displays article’s id.
      // "example: 3"4"  o List_",
      // o Details_
      //  [EasyDNNnews:FeaturedArticle]
      //  Description:
      // If the article is set as featured
      // article it displays EDN_featured
      // otherwise it displays nothing.
      // "example":"EDN_featured",
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfExists:FeaturedArticle][EasyDNNnews:EndIf:FeaturedArticle]
      //  Description:
      // Checks if article is featured. If it is
      // the content between the tokens is
      // displayed otherwise the content between
      // tokens is deleted.
      //   o List_
      // o Details_
      //  [EasyDNNnews:IfNotExists:FeaturedArticle][EasyDNNnews:EndIf:FeaturedArticle]
      //  Description:
      // Checks if article is featured. If it is
      // not then the content between the tokens
      // is displayed otherwise the content
      // between tokens is deleted.
      //   o List_
      // o Details_ o
      //  [EasyDNNnews:ActiveArticle]
      //  Description:
      // If there are two or more instances of
      // the EasyDNNnews module on the same page
      // and one opens details of an article in
      // other instances that are listing
      // articles [EasyDNNnews:ActiveArticle]
      // will be replace with EDN_activeclass on
      // that opened article  otherwise it
      // displays nothing.
      // "example: EDN_activeclas"s"  List_",
      //  [EasyDNNnews:ClientBasePath]
      //  Description:
      // Displays applications virtual root path
      // on the server.
      //   o List_
      // o Details_
      //  [EasyDNNnews:ModuleID]
      //  Description:
      // Displays current module id.
      //   o List_
      // o Details_
      //  [EasyDNNnews:SendToAFriend]
      //  Description:
      // Displays link that will open popup to
      // send link to email.
      //   o Details_
      //  [EasyDNNnews:Print:ArticleDetails]
      //  Description:
      // Displays button that will open popup to
      // print article details.
      //   o Details_
      //  [EasyDNNnews:IfExists:AnyArticle][EasyDNNnews:EndIf:AnyArticle]
      //  Description:
      // Checks any article is listed. If it is
      // the content between the tokens is
      //    o List_
      // It is placed inside <!‐‐ ArticleRepeat:After ‐‐>
          
      //    displayed otherwise the content between
      // tokens is deleted.
      //     [EasyDNNnews:IfNotExists:AnyArticle][EasyDNNnews:EndIf:AnyArticle]
      //  Description:
      // Checks any article is listed. If it is
      // not the content between the tokens is
      // displayed otherwise the content between
      // tokens is deleted.
      //   o List_
      // It is placed inside <!‐‐ ArticleRepeat:After ‐‐>
      //    Gravity gallery tokens
      //   [EDG:LocalizedText:SomeText.Text]
      //  Description:
      // All words in template can be localized
      // by adding SomeText.Text record with
      // value into .rscx file.
      //   o Gravity Gallery Template
      //  [EDG:ModuleID]
      //  Description:
      // Display current module id.
      //   o Gravity Gallery Template
      //  [EDG: NumberOfComments]
      //  Description:
      // Displays number of comments of current
      // media.
      //   o Gravity Gallery Template
      //  [EDG:ItemTitle]
      //  Description:
      // Displays current media title.
      //   o Gravity Gallery Template
      //  [Has:EDG:ItemTitle][/Has:EDG:ItemTitle]
      //  Description:
      // Checks if media has title and option to
      // display title is turned on. If it is
      // content between the tokens is displayed
      // otherwise the content between tokens is
      // deleted.
      //   o Gravity Gallery Template
      //  [HasNot:EDG:ItemTitle][/HasNot:EDG:ItemTitle]
      //  Description:
      // Checks if media has title and option to
      // display title is turned on. If it is
      // not content between the tokens is
      // displayed otherwise the content between
      // tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:ItemDescription]
      //  Description:
      // Displays current media description.
      //   o Gravity Gallery Template
      //  [Has:EDG:ItemDescription][/Has:EDG:ItemDescription]
      //  Description:
      // Checks if media has description and
      // option to display description is turned
      // on. If it is content between the tokens
      // is displayed otherwise the content
      // between tokens is deleted.
      //   o Gravity Gallery Template
      //  [HasNot:EDG:ItemDescription][/HasNot:EDG:ItemDescription]
      //  Description:
      // Checks if media has description and
      // option to display description is turned
      // on. If it is not content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:ItemThumbnail]
      //  Description:
      // Displays link to current media
      // thumbnail.
      //   o Gravity Gallery Template
      //  [EDG:CurrentMediaURL]
      //  Description:
      // Displays link to current media.
      //   o Gravity Gallery Template
      //  [EDG:ItemMediaLink]
      //  Description:
      // Checks option and display link for
      // option to open media in lightbox
      // otherwise displays link to open media
      // in EasyDNNgallery Gravity gallery
      // module.
      //   o Gravity Gallery Template
      //  [EDG:MediaType]
      //  Description:
      // Displays media type text. Possible
      // values are: image, audio, video,
      // embededVideo.
      //   o Gravity Gallery Template
      //  [EDG:MediaRatingValue]
      //  Description:
      // Displays current media rating.
      //   o Gravity Gallery Template
      //  [EDG:ItemUploadDate]
      //  Description:
      // Displays current media upload date.
      //   o Gravity Gallery Template
      //  [EDG:ItemAuthor]
      //  Description:
      //    o Gravity Gallery Template
            
      //    Displays current media uploader display
      // name.
      //     [EDG:ItemAuthorAvatar]
      //  Description:
      // Displays current media uploader avatar.
      //   o Gravity Gallery Template
      //  [EDG:ItemAuthorProfileLink]
      //  Description:
      // Displays link to profile of current
      // media uploader.
      //   o Gravity Gallery Template
      //  [EDG:ItemNumberOfViews]
      //  Description:
      // Displays number of views for current
      // media.
      //   o Gravity Gallery Template
      //  [EDG:DontEmbedInPage][/EDG:DontEmbedInPage]
      //  Description:
      // Checks if lightbox option is set to
      // none. If it is not content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:EmbedInPage][/EDG:EmbedInPage]
      //  Description:
      // Checks if lightbox option is set to
      // none. If it is content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:LightBoxData]
      //  Description:
      // Displays data needed for opening item
      // in Lightbox.
      //   o Gravity Gallery Template
      //  [EDG:MediaData]
      //  Description:
      // Displays link to media. If it is
      // embedded video it display embedded
      // video code.
      //   o Gravity Gallery Template
      //  [EDG:EmbedMediaData]
      //  Description:
      // Displays media embedded in page. If
      // media is video or audio it is displayed
      // in player.
      //   o Gravity Gallery Template
      //  [EDG:ImageAltData]
      //  Description:
      // Displays media title stripped of html
      // for use as alt tag.
      //   o Gravity Gallery Template
      //  [EDG:NumberOfLikes]
      //  Description:
      // Displays number of likes for current
      // media.
      //   o Gravity Gallery Template
      //  [EDG:MediaLike]
      //  Description:
      // Displays button for media like.
      //   o Gravity Gallery Template
      //  [EDG:MediaDownloadLink]
      //  Description:
      // Displays media download link.
      //   o Gravity Gallery Template
      //  [EDG:DownloadMediaSize]
      //  Description:
      // Displays media file size.
      //   o Gravity Gallery Template
      //  [EDG:DownloadMediaFileName]
      //  Description:
      // Displays media filename.
      //   o Gravity Gallery Template
      //  [EDG:DownloadMediaExtension]
      //  Description:
      // Displays media extension.
      //   o Gravity Gallery Template
      //  [Has:EDG:MediaDownload][/Has:EDG:MediaDown
      // load]
      //  Description:
      // Checks if user has permission to
      // download and media can be downloaded.
      // If it can than content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:NumberOfDownloads]
      //  Description:
      // Displays number of downloads.
      //   o Gravity Gallery Template
      //  [EDG:MediaRatingAction]
      //  Description:
      // Displays rating stars to allow user to
      // rate media.
      //   o Gravity Gallery Template
      //  [EDG:ItemPaging]
      //  Description:
      // Displays paging.
      //   o Gravity Gallery Template
      //  [EDG:ListItemThumbWidth]
      //  Description:
      // Displays thumbnail with.
      //   o Gravity Gallery Template
      //  [EDG:ItemsShareButtons]
      //  Description:
      // Displays media sharing links using
      // AddThis service.
      //   o Gravity Gallery Template
      //  [EDG:RowLinePosition]
      //  Description:
      // Displays media current position in a
      // list.
      //    o Gravity Gallery Template
              
      //   [EDG:FormatedDate:dateformat]
      //  Description:
      // Displays article published date in various formats. dateformat parameter is Microsoft standard date and time format string. For a full list of examples visit http://msdn.microsoft.com/en‐ us/library/az4se3k1.aspx.
      // Examples:
      // [EasyDNNnews:FormatedDate:dd,MM,yy]‐
      // output: 23,04,13
      // [EasyDNNnews:FormatedDate:ddd‐MMM‐yy]‐
      // output: Tue‐Apr‐13
      //    o Gravity Gallery Template
      //  [EDG:PeopleWhoLikedThisMedia]
      //  Description:
      // Displays users who liked current media
      // in a formatted html list.
      //   o Gravity Gallery Template
      //  [Has:EDG:AvatarProvider][/Has:EDG:AvatarProvider]
      //  Description:
      // Checks options if avatar provider is
      // set. If it is than content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //  [EDG:CurrentURL]
      //  Description:
      // Displays current URL.
      //   o Gravity Gallery Template
      //  [EDG:RedirectToURL]
      //  Description:
      // Displays image redirect URL.
      //   o Gravity Gallery Template
      //  [EDG:GalleryBackLink]
      //  Description:
      // Displays link to EasyDNNgallery module
      // Gravity gallery.
      //   o Gravity Gallery Template
      // o Template
      // o Available only in
      //     header or footer
      //     section of the
      //     template
      //  [Has:EDG:GalleryBackLink][/Has:EDG:GalleryBackLink]
      //  Description:
      // Checks options if link to
      // EasyDNNgallery module Gravity gallery
      // is set. If it is than content between
      // the tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //  [EDG:ItemParentGalleryTitle]
      //  Description:
      // Displays title of media gallery.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //  [Has:EDG:ItemParentGalleryTitle][/Has:EDG:
      // ItemParentGalleryTitle]
      //  Description:
      // Checks if media gallery title is set.
      // If it is than content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //  [HasNot:EDG:ItemParentGalleryTitle][/HasNo
      // t:EDG:ItemParentGalleryTitle]
      //  Description:
      // Checks if media gallery title is set.
      // If it is not than content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //  [EDG:ItemParentGalleryDescription]
      //  Description:
      // Displays description of media gallery.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //  [Has:EDG:ItemParentGalleryDescription][/Ha
      // s:EDG:ItemParentGalleryDescription]
      //  Description:
      //    o Gravity Gallery Template
         
      //    Checks if media gallery description is
      // set. If it is than content between the
      // tokens is displayed otherwise the
      // content between tokens is deleted.
      //    Available only in
      // header or footer
      // section of the
      // template
      //  [HasNot:EDG:ItemParentGalleryDescription][
      // /HasNot:EDG:ItemParentGalleryDescription]
      //  Description:
      // Checks if media gallery description is
      // set. If it is not than content between
      // the tokens is displayed otherwise the
      // content between tokens is deleted.
      //   o Gravity Gallery Template
      //     Available only in
      //     header or footer
      //     section of the
      //     template
      //    Tokens available in the Email Templates
      //   [Portal:LogoFile]
      //  Description:
      // Displays portal logo URL.
      //   o Email Templates
      //  [Portal:Link]
      //  Description:
      // Displays link to portal.
      //   o Email Templates
      //  [Portal:PortalName]
      //  Description:
      // Displays portal name.
      //   o Email Templates
      //  [Portal:Email]
      //  Description:
      // Displays portal email.
      //   o Email Templates
      //  [EasyDNNnews:EventUser:FirstName]
      //  Description:
      // Displays user first name.
      //   o Email Templates
      //  [EasyDNNnews:EventUser:LastName]
      //  Description:
      // Displays user last name.
      //   o Email Templates
      //  [EasyDNNnews:EventUser:Email]
      //  Description:
      // Displays user email name.
      //   o Email Templates
      //  [EasyDNNnews:ConfirmationLink]
      //  Description:
      // Displays email verification link.
      //   o Email Templates
      // Can only be used in user verification template.

    //    Tokens available in EasyDNNnewsCalendar module templates
        
    {
      "token":"[EasyDNNarchive:YearLink]",
      "description":"Displays link for year archive.",
      "files":["Calendar Archive"]
    },
    {
      "token":"[EasyDNNarchive:Year]",
      "description":"Displays year.",
      "files":["Calendar Archive"]
    },
    {
      "token":"[EasyDNNarchive:YearArticleCount]",
      "description":"Displays article count in a year.",
      "files":["Calendar Archive"]
    },
    {
      "token":"[EasyDNNarchive:MonthLink]",
      "description":"Displays link for a monthly archive.",
      "files":["Calendar Archive"]
    },
    {
      "token":"[EasyDNNarchive:MonthText]",
      "description":"Displays month name.",
      "files":["Calendar Archive"]
    },
    {
      "token":"[EasyDNNarchive:MonthArticleCount]",
      "description":"Displays article count in a month.",
      "files":["Calendar Archive"]
    },
    
    // Tokens available in EasyDNNnewsTagCloud module templates

    {
      "token":"[EasyDNNtags:TagClass]",
      "description":"Displays text TagStyle number containing tag importance. Example: TagStyle1 or TagStyle6. It can be used to define CSS styles. Tag importance if calculated from number of tag appearance.",
      "files":["TagCloud"]
    },
    {
      "token":"[EasyDNNtags:Link]",
      "description":"Displays link for listing articles for selected tag.",
      "files":["TagCloud"]
    },
    {
      "token":"[EasyDNNtags:TagName]",
      "description":"Displays tag name.",
      "files":["TagCloud"]
    },
    {
      "token":"[EasyDNNtags:TagCount]",
      "description":"Displays number of appearances for selected tag.",
      "files":["TagCloud"]
    },
    {
      "token":"[EasyDNNtags:IfExists:TagCount][EasyDNNtags:EndIf:TagCount]",
      "description":"Checks if token [EasyDNNtags:TagCount] exists. If it exists the content between the tokens is displayed otherwise the content between tokens is deleted.",
      // TagCloud
      // Tokens available in EasyDNNnewsCategoriesMenu module templates
    },
    {
      "token":"[EasyDNNcategories:ArticleCount]",
      "description":"Number of articles in category.",
      "files":["CategoryMenu"]
  	},
    {
      "token":"[EasyDNNcategories:Link]",
      "description":"Category link.",
      "files":["CategoryMenu"]
  	},
    {
      "token":"[EasyDNNcategories:Description]",
      "description":"Category description.",
      "files":["CategoryMenu"]
  	},
    {
      "token":"[EasyDNNcategories:Title]",
      "description":"Category title.",
      "files":["CategoryMenu"]
  	},
    {
      "token":"[EasyDNNcategories:RSSCategoryURL]",
      "description":"Category RSS URL.",
      "files":["CategoryMenu"]
  	},
    {
      "token":"[EasyDNNcategories:HTMLDescription]",
      "description":"Displays category description in HTML format.",
      "files":["CategoryMenu"]
  	}

  ]
}
